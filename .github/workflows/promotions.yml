name: RC Promotion

on:
  repository_dispatch:
    types: [trigger-rc-promotion]

permissions:
  contents: read

jobs:
  promote-rc:
    runs-on: ubuntu-latest

    steps:
      # 1) Checkout Infra Repository
      - name: Checkout Infra Repository
        uses: actions/checkout@v4

      # 2) Configure AWS CLI in GitHub runner
      - name: Configure AWS CLI
        run: |
          aws configure set aws_access_key_id "${{ secrets.AWS_ACCESS_KEY_ID }}"
          aws configure set aws_secret_access_key "${{ secrets.AWS_SECRET_ACCESS_KEY }}"
          aws configure set region us-east-1

      # 3) Verify AWS credentials & ECR setup
      - name: Verify AWS Credentials & ECR Setup
        run: |
          echo "🔹 AWS_ECR_BACKEND_REPO=${{ secrets.AWS_ECR_BACKEND_REPO }}"
          echo "🔹 AWS_ECR_FRONTEND_REPO=${{ secrets.AWS_ECR_FRONTEND_REPO }}"
          echo "🔹 AWS Caller Identity:"
          aws sts get-caller-identity --query 'Account' --output text || echo "🔴 AWS CREDENTIALS INVALID"

      # 4) Extract release version
      - name: Extract Release Version
        id: extract_version
        run: |
          RELEASE_VERSION="${{ github.event.client_payload.release_tag }}"
          if [ -z "$RELEASE_VERSION" ]; then
            echo "❌ ERROR: RELEASE_VERSION is empty!"
            exit 1
          fi
          echo "RELEASE_VERSION=${RELEASE_VERSION}" >> $GITHUB_ENV
          echo "RC_TAG=rc${RELEASE_VERSION#v}" >> $GITHUB_ENV
          echo "✅ Release version: $RELEASE_VERSION → Tagging as: rc${RELEASE_VERSION#v}"

      # 5) Save SSH key to connect to EC2
      - name: Save Private Key for SSH
        run: |
          echo "${{ secrets.SSH_PRIVATE_KEY }}" | base64 --decode > github-actions.pem
          chmod 600 github-actions.pem

      # 6) SSH into EC2 & Promote ECR Images
      - name: SSH into EC2 & Promote ECR Images
        env:
          AWS_ECR_BACKEND: ${{ secrets.AWS_ECR_BACKEND_REPO }}
          AWS_ECR_FRONTEND: ${{ secrets.AWS_ECR_FRONTEND_REPO }}
          DATABASE_URL: ${{ secrets.DATABASE_URL }}
          OPENCAGE_API_KEY: ${{ secrets.OPENCAGE_API_KEY }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          RC_TAG: ${{ env.RC_TAG }}
        run: |
          echo "🚀 Connecting to EC2 and promoting images in ECR..."
          
          ssh -o StrictHostKeyChecking=no -i github-actions.pem \
            AWS_ECR_BACKEND="${AWS_ECR_BACKEND}" \
            AWS_ECR_FRONTEND="${AWS_ECR_FRONTEND}" \
            DATABASE_URL="${DATABASE_URL}" \
            OPENCAGE_API_KEY="${OPENCAGE_API_KEY}" \
            AWS_ACCESS_KEY_ID="${AWS_ACCESS_KEY_ID}" \
            AWS_SECRET_ACCESS_KEY="${AWS_SECRET_ACCESS_KEY}" \
            RC_TAG="${RC_TAG}" \
            ec2-user@54.163.221.190 << 'EOF'
          
          ################################################################################
          # 1) DEBUG: Print environment variables inside EC2
          ################################################################################
          echo "🔹 Checking Environment Variables Inside EC2..."
          echo "AWS_ECR_BACKEND=$AWS_ECR_BACKEND"
          echo "AWS_ECR_FRONTEND=$AWS_ECR_FRONTEND"
          echo "RC_TAG=$RC_TAG"
          echo "AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID:0:4}********"
          echo "AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY:0:4}********"

          ################################################################################
          # 2) CREATE AWS CREDENTIALS FILE INSIDE SSH SESSION
          ################################################################################
          echo "🔹 Creating AWS credentials in ~/.aws/"
          mkdir -p ~/.aws
          echo "[default]" > ~/.aws/credentials
          echo "aws_access_key_id=$AWS_ACCESS_KEY_ID" >> ~/.aws/credentials
          echo "aws_secret_access_key=$AWS_SECRET_ACCESS_KEY" >> ~/.aws/credentials

          echo "[default]" > ~/.aws/config
          echo "region=us-east-1" >> ~/.aws/config

          export AWS_CONFIG_FILE=~/.aws/config
          export AWS_SHARED_CREDENTIALS_FILE=~/.aws/credentials

          aws sts get-caller-identity --query 'Account' --output text || { echo "🔴 AWS CREDENTIALS INVALID"; exit 1; }

          ################################################################################
          # 3) AUTHENTICATE WITH ECR
          ################################################################################
          echo "🔹 Authenticating Docker with AWS ECR inside EC2..."
          aws ecr get-login-password --region us-east-1 | docker login --username AWS --password-stdin "$AWS_ECR_BACKEND" || exit 1
          aws ecr get-login-password --region us-east-1 | docker login --username AWS --password-stdin "$AWS_ECR_FRONTEND" || exit 1

          ################################################################################
          # 4) PROMOTE BACKEND IMAGE
          ################################################################################
          echo "🔹 Promoting backend image: $AWS_ECR_BACKEND → $RC_TAG"
          aws ecr batch-get-image --repository-name "$AWS_ECR_BACKEND" --image-ids imageTag=latest \
            --query 'images[].imageManifest' --output text > manifest.json || { echo "Backend image not found"; exit 1; }

          aws ecr put-image --repository-name "$AWS_ECR_BACKEND" --image-tag "$RC_TAG" --image-manifest file://manifest.json

          ################################################################################
          # 5) PROMOTE FRONTEND IMAGE
          ################################################################################
          echo "🔹 Promoting frontend image: $AWS_ECR_FRONTEND → $RC_TAG"
          aws ecr batch-get-image --repository-name "$AWS_ECR_FRONTEND" --image-ids imageTag=latest \
            --query 'images[].imageManifest' --output text > manifest.json || { echo "Frontend image not found"; exit 1; }

          aws ecr put-image --repository-name "$AWS_ECR_FRONTEND" --image-tag "$RC_TAG" --image-manifest file://manifest.json

          EOF
